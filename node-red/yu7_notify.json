[
  {
    "id": "7f1ddb83788c4219",
    "type": "tab",
    "label": "yu7",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "d978663f2bee121e",
    "type": "http request",
    "z": "7f1ddb83788c4219",
    "name": "get_order_detail",
    "method": "POST",
    "ret": "obj",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 1240,
    "y": 620,
    "wires": [["1c5ea3675340f328", "ada3820b628c9217"]]
  },
  {
    "id": "a6be38f0a49f434b",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "参数设置",
    "func": "msg.url =\"https://api.retail.xiaomiev.com/mtop/car-order/order/detail\"\n\nvar data = [{ \"orderId\": global.get(\"orderId\"), \"userId\": global.get(\"userId\") }]\nconst data_json = JSON.stringify(data);\nmsg.payload = data_json\n\nmsg.headers = {\n    'Accept-Language': 'zh-Hans-CN;q=1, en-CN;q=0.9',\n    \"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 18_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MicroMessenger/8.0.60(0x18003c31) NetType/4G Language/zh_CN\",\n    // \"Accept-Encoding\": \"gzip,compress,br,deflate\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"configSelectorVersion\": \"2\",\n    \"content-type\": \"application/json; charset=utf-8\",\n    \"deviceappversion\": \"1.16.0\",\n    \"x-user-agent\": \"channel/car platform/car.wxlite\",\n    \"Referer\": \"https://servicewechat.com/wx183d85f5e5e273c6/93/page-frame.html\",\n    \"Cookie\": global.get(\"Cookie\"),\n}\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1080,
    "y": 620,
    "wires": [["d978663f2bee121e"]]
  },
  {
    "id": "a14b39ad8f5044c9",
    "type": "comment",
    "z": "7f1ddb83788c4219",
    "name": "获取小米汽车交付进度",
    "info": "",
    "x": 700,
    "y": 400,
    "wires": []
  },
  {
    "id": "bfc509d4d3c43d23",
    "type": "inject",
    "z": "7f1ddb83788c4219",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": "2",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 670,
    "y": 520,
    "wires": [["19b372a0020dc5b7", "25b166b07a655332"]]
  },
  {
    "id": "ad7a46b756a429f0",
    "type": "debug",
    "z": "7f1ddb83788c4219",
    "name": "debug 400",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1650,
    "y": 1100,
    "wires": []
  },
  {
    "id": "c2b47d1bc667951b",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "获取交付进度-成功",
    "func": "var logo_link = msg.payload.data.backdropPictures.backdropPicture\nvar orderStatusName = msg.payload.data.statusInfo.orderStatusName\nvar delivery_time = msg.payload.data.orderTimeInfo.deliveryTime\nvar add_time = msg.payload.data.orderTimeInfo.addTime\nvar pay_time = msg.payload.data.orderTimeInfo.payTime\nvar lock_time = msg.payload.data.orderTimeInfo.lockTime\nvar goods_names = msg.payload.data.orderItem.map(item => item.goodsName || \"\").join(\"|\");\n\nglobal.set(\"error_times\", 0)\nglobal.set(\"deliveryTimeLatest\", delivery_time)\n\nvar text = `${global.get(\"delivery_date_range\")}\\n\\n📅 下定时间：${add_time}\\n💳 支付时间：${pay_time}\\n🔒 锁单时间：${lock_time}\\n\\n🛍️ 配置：${goods_names}${global.get(\"carshop_notice_text\")}`\nvar msg = { \"delivery_time\": delivery_time, \"logo_link\": logo_link, \"text\": text, \"orderStatusName\": orderStatusName }\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 750,
    "y": 800,
    "wires": [["f30537d02dbc5010", "dafa3ff249b6b24c"]]
  },
  {
    "id": "f30537d02dbc5010",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "构建bark请求",
    "func": "var logo_link = msg.logo_link\nvar message = msg.text\nvar token = global.get(\"device_token\")\nvar remarks_text = \" \".repeat(50) + global.get(\"remarks\")\nmsg.url =`https://api.day.app/${token}`\n\nvar data = {\n    \"body\": message + \"\\n\\n\" + remarks_text,\n    \"title\": `【小米汽车】${msg.orderStatusName}(${global.get(\"current_time\")})`,\n    \"subtitle\" :`📦 交付进度：${msg.delivery_time}`,\n    \"icon\": logo_link,\n    \"group\": \"test\",\n    \"isArchive\": 1,\n}\nconst data_json = JSON.stringify(data);\nmsg.headers = {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n}\n\nmsg.payload = data_json\nmsg.carshopNotice = global.get(\"carshopNotice\")\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 990,
    "y": 1020,
    "wires": [["807ec75ec32fb1a8", "d39f0ec600af903e"]]
  },
  {
    "id": "33ea869f05505a35",
    "type": "http request",
    "z": "7f1ddb83788c4219",
    "name": "send_bark_message",
    "method": "POST",
    "ret": "obj",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 1540,
    "y": 1020,
    "wires": [["51ea8318f410673f", "dafa3ff249b6b24c"]]
  },
  {
    "id": "19b372a0020dc5b7",
    "type": "moment",
    "z": "7f1ddb83788c4219",
    "name": "current_time",
    "topic": "",
    "input": "",
    "inputType": "date",
    "inTz": "Asia/Shanghai",
    "adjAmount": 0,
    "adjType": "days",
    "adjDir": "add",
    "format": "yyyy-MM-DD HH:mm:ss",
    "locale": "en-US",
    "output": "current_time",
    "outputType": "global",
    "outTz": "Asia/Shanghai",
    "x": 950,
    "y": 420,
    "wires": [[]]
  },
  {
    "id": "1c5ea3675340f328",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "hask",
        "v": "data",
        "vt": "str"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1430,
    "y": 620,
    "wires": [["c2b47d1bc667951b"], ["945f5e0adf12bb24"]]
  },
  {
    "id": "945f5e0adf12bb24",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "获取交付进度-失败",
    "func": "var error_times_update = global.get(\"error_times\") + 1\nvar logo_link = \"https://upload.wikimedia.org/wikipedia/commons/4/4f/Xiaomi_EV_New.jpg\"\nglobal.set(\"error_times\", error_times_update)\nvar delivery_time = \"请检查account参数是否正确！\"\nvar orderId = global.get(\"orderId\")\nvar userId = global.get(\"userId\")\nvar userId = global.get(\"userId\")\nvar cookie = global.get(\"cookie\")\n\nglobal.set(\"deliveryTimeLatest\", delivery_time)\nvar text = `失败次数：${global.get(\"error_times\")}\\norderId：${orderId}\\nuserId：${userId}\\nCookie：${cookie}\\n【失败次数超过3次后将停止发送】`\nvar msg = { \"delivery_time\": delivery_time, \"logo_link\": logo_link, \"text\": text }\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 730,
    "y": 1020,
    "wires": [["f30537d02dbc5010"]]
  },
  {
    "id": "25b166b07a655332",
    "type": "file in",
    "z": "7f1ddb83788c4219",
    "name": "读取config.json",
    "filename": "/data/config.json",
    "filenameType": "str",
    "format": "utf8",
    "chunk": false,
    "sendError": false,
    "encoding": "none",
    "allProps": false,
    "x": 860,
    "y": 520,
    "wires": [["3baa903e4cd32356"]]
  },
  {
    "id": "3baa903e4cd32356",
    "type": "json",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "payload",
    "action": "",
    "pretty": true,
    "x": 1050,
    "y": 520,
    "wires": [["fabf45dd3d633458"]]
  },
  {
    "id": "fabf45dd3d633458",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "设定全局变量",
    "func": "global.set(\"orderId\",msg.payload.account.orderId) \nglobal.set(\"userId\",msg.payload.account.userId) \nglobal.set(\"Cookie\",msg.payload.account.Cookie) \nglobal.set(\"carshopCookie\",msg.payload.account.carshopCookie) \nglobal.set(\"device_token\", msg.payload.account.deviceToken) \n\n\nglobal.set(\"deliveryTimeLatest_old\", msg.payload.notice.deliveryTimeLatest)\nglobal.set(\"carshopNotice_old\", msg.payload.notice.carshopNotice)\nglobal.set(\"remarks\", msg.payload.notice.remarks)\nglobal.set(\"error_times\", msg.payload.notice.errorTimes)\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1220,
    "y": 520,
    "wires": [["ca567da008ab8f78"]]
  },
  {
    "id": "33a0c978b27892cc",
    "type": "file",
    "z": "7f1ddb83788c4219",
    "name": "保存config.json",
    "filename": "/data/config.json",
    "filenameType": "str",
    "appendNewline": false,
    "createDir": true,
    "overwriteFile": "true",
    "encoding": "none",
    "x": 1840,
    "y": 780,
    "wires": [["01c0b4e7557a0680"]]
  },
  {
    "id": "dafa3ff249b6b24c",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "更新配置文件",
    "func": "\nmsg.payload = {\n    \"account\": {\n        \"orderId\": global.get(\"orderId\"),\n        \"userId\": global.get(\"userId\"),\n        \"Cookie\": global.get(\"Cookie\"),\n        \"carshopCookie\": global.get(\"carshopCookie\"),\n        \"deviceToken\": global.get(\"device_token\"),\n    },\n    \"notice\": {\n        \"deliveryTimeLatest\": global.get(\"deliveryTimeLatest\"),\n        \"carshopNotice\": global.get(\"carshopNotice\"),\n        \"remarks\": global.get(\"remarks\"),\n        \"errorTimes\":global.get(\"error_times\"),\n        \n    } \n}\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1460,
    "y": 780,
    "wires": [["844b53875c4a56c2"]]
  },
  {
    "id": "844b53875c4a56c2",
    "type": "json",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "payload",
    "action": "",
    "pretty": true,
    "x": 1650,
    "y": 780,
    "wires": [["33a0c978b27892cc"]]
  },
  {
    "id": "55e5e6e4509875ed",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "changed",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1230,
    "y": 1040,
    "wires": [["33ea869f05505a35"], ["694f9f2ef05dbcb8"]]
  },
  {
    "id": "807ec75ec32fb1a8",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "参数错误",
    "property": "delivery_time",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "请检查参数是否正确！",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 1180,
    "y": 960,
    "wires": [["aa863859613eefdd"]]
  },
  {
    "id": "aa863859613eefdd",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "提醒次数<=3",
    "property": "error_times",
    "propertyType": "global",
    "rules": [
      {
        "t": "lte",
        "v": "3",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 1330,
    "y": 960,
    "wires": [["33ea869f05505a35"]]
  },
  {
    "id": "51ea8318f410673f",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "payload.code",
    "propertyType": "msg",
    "rules": [
      {
        "t": "neq",
        "v": "200",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 1150,
    "y": 1240,
    "wires": [["f599f3fc27e18a49", "0f96755b1e5b65da"]]
  },
  {
    "id": "f599f3fc27e18a49",
    "type": "change",
    "z": "7f1ddb83788c4219",
    "name": "Bark的token错误提醒",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "请检查Bark的token是否正确！",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1340,
    "y": 1240,
    "wires": [["ad7a46b756a429f0"]]
  },
  {
    "id": "0f96755b1e5b65da",
    "type": "change",
    "z": "7f1ddb83788c4219",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "error_times",
        "pt": "global",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1350,
    "y": 1300,
    "wires": [["dafa3ff249b6b24c"]]
  },
  {
    "id": "694f9f2ef05dbcb8",
    "type": "change",
    "z": "7f1ddb83788c4219",
    "name": "无变更提醒",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "交付状态无更新",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1370,
    "y": 1080,
    "wires": [["ad7a46b756a429f0"]]
  },
  {
    "id": "01c0b4e7557a0680",
    "type": "ha-sensor",
    "z": "7f1ddb83788c4219",
    "name": "yu7_notify",
    "entityConfig": "24c5454de65ae874",
    "version": 0,
    "state": "deliveryTimeLatest",
    "stateType": "global",
    "attributes": [
      {
        "property": "updateTime",
        "value": "current_time",
        "valueType": "global"
      },
      {
        "property": "deliveryTimeLatest",
        "value": "deliveryTimeLatest",
        "valueType": "global"
      }
    ],
    "inputOverride": "allow",
    "outputProperties": [],
    "x": 2070,
    "y": 780,
    "wires": [[]]
  },
  {
    "id": "0383f5e3124a9a6e",
    "type": "http request",
    "z": "7f1ddb83788c4219",
    "name": "get_carshop_info",
    "method": "POST",
    "ret": "obj",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 1590,
    "y": 480,
    "wires": [["b7840501c3bdc6c2"]]
  },
  {
    "id": "ca567da008ab8f78",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "参数设置",
    "func": "msg.url =\"https://carshop-api.retail.xiaomiev.com/mtop/carlife/product/info\"\n\nvar data = [{}, {\"productId\": \"21452\", \"servicePackageVersion\": 2}]\nconst data_json = JSON.stringify(data);\nmsg.payload = data_json\n\nmsg.headers = {\n        \"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 18_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 MIOTStore/20191212 (micar;1.16.2;f37b2fb7-33c7-4295-9d4b-a5d29881b7f5;NaNI;00000000-0000-0000-0000-000000000000;)\",\n        \"Content-Type\": \"application/json\",\n        \"referer\": \"https://carshop-api.retail.xiaomiev.com\",\n        \"x-mishop-app-source\": \"front-RN\",\n        \"x-user-agent\": \"channel/car platform/carlife.ios\",\n        \"mishop-model\": \"iPhone15,3\",\n        \"accept-language\": \"zh-CN,zh-Hans;q=0.9\",\n        \"Cookie\": global.get(\"carshopCookie\"),\n    }\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1420,
    "y": 480,
    "wires": [["0383f5e3124a9a6e"]]
  },
  {
    "id": "b7840501c3bdc6c2",
    "type": "switch",
    "z": "7f1ddb83788c4219",
    "name": "",
    "property": "payload.data.product",
    "propertyType": "msg",
    "rules": [
      {
        "t": "hask",
        "v": "notice",
        "vt": "str"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1770,
    "y": 480,
    "wires": [["89fde5a634c0e50b"], ["d088ae23eab5c4a8"]]
  },
  {
    "id": "89fde5a634c0e50b",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "设置carshop_notice_text",
    "func": "var notice = msg.payload.data.product.notice\nglobal.set(\"carshopNotice\",notice)\n\nif(notice == \"账号内暂无绑定车辆，请先绑定再来购买\") {\n  var carshop_notice_text = `\\n\\n🛒 无忧服务包状态：${notice} 【状态无更新】`\n  global.set('carshop_notice_text', carshop_notice_text)\n}\nelse{\n  var carshop_notice_text = `\\n\\n🛒 无忧服务包状态：${notice} 【状态有更新，可以问问交付专员！】`\n  global.set('carshop_notice_text', carshop_notice_text)\n}\n\n\nmsg.text = { \"notice\": notice, \"carshop_notice_text\": carshop_notice_text }\nreturn msg",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1770,
    "y": 560,
    "wires": [["a6be38f0a49f434b"]]
  },
  {
    "id": "ada3820b628c9217",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "set delivery_date_range",
    "func": "// 首先确保在Node-RED的设置中加载了moment\n\nvar delivery_time = msg.payload.data.orderTimeInfo.deliveryTime\nvar add_time = msg.payload.data.orderTimeInfo.addTime\nvar pay_time = msg.payload.data.orderTimeInfo.payTime\nvar lock_time = msg.payload.data.orderTimeInfo.lockTime\n\nfunction calculateDeliveryDate(deliveryTime, lockTime) {\n    // 检查输入参数，确保其有效\n    if (!deliveryTime || !lockTime) {\n        return \"输入参数无效\"; // 或者其他你希望的默认输出\n    }\n\n    // 提取周数信息\n    const weeksPattern = /(\\d+)-(\\d+)周/g;\n    const weeksMatches = deliveryTime.match(weeksPattern);\n\n    if (!weeksMatches || weeksMatches.length === 0) {\n        return \"\";\n    }\n\n    const lastMatch = weeksMatches[weeksMatches.length - 1].match(/(\\d+)-(\\d+)周/);\n    const minWeeks = parseInt(lastMatch[1]);\n    const maxWeeks = parseInt(lastMatch[2]);\n\n    // 默认使用第2个周数范围的结果和当前日期做比较\n    let currentDate = new Date();\n\n    // 如果只存在1个周数范围结果，则使用第1个周数范围的结果和锁单日期做比较\n    if (weeksMatches.length === 1) {\n        currentDate = lock_time;\n    }\n\n    // 计算交付日期范围\n    let minfutureDate = new Date(currentDate);\n    minfutureDate.setDate(currentDate.getDate() + minWeeks * 7); // 加上周数的天数\n    let maxfutureDate = new Date(currentDate);\n    maxfutureDate.setDate(currentDate.getDate() + maxWeeks * 7); // 加上周数的天数\n    // 格式化为 YYYY-MM-DD\n    function formatDate(date) {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份从0开始，需加1\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${year}-${month}-${day}`;\n    }\n    minfutureDate = formatDate(minfutureDate)\n    maxfutureDate = formatDate(maxfutureDate)\n    var delivery_date_range = `⏳ 预计提车日期：${minfutureDate} 至 ${maxfutureDate}`\n    return delivery_date_range;\n}\n\n// 使用示例\nmsg = {}\nmsg.delivery_time = delivery_time\nmsg.lock_time = lock_time\nvar delivery_date_range = calculateDeliveryDate(delivery_time, lock_time);\nmsg.payload = delivery_date_range\nglobal.set(\"delivery_date_range\", delivery_date_range)\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1590,
    "y": 700,
    "wires": [[]]
  },
  {
    "id": "03cc0295c5b71e47",
    "type": "debug",
    "z": "7f1ddb83788c4219",
    "name": "debug 405",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1690,
    "y": 340,
    "wires": []
  },
  {
    "id": "1015822ac8af2633",
    "type": "change",
    "z": "7f1ddb83788c4219",
    "name": "carshopCookie的错误提醒",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "已检测到存在carshopCookie，但是无法获取数据",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1470,
    "y": 340,
    "wires": [["03cc0295c5b71e47"]]
  },
  {
    "id": "d088ae23eab5c4a8",
    "type": "change",
    "z": "7f1ddb83788c4219",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "carshop_notice_text",
        "pt": "global",
        "to": "",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1190,
    "y": 340,
    "wires": [["1015822ac8af2633"]]
  },
  {
    "id": "d39f0ec600af903e",
    "type": "function",
    "z": "7f1ddb83788c4219",
    "name": "function 23",
    "func": "// 假设这些变量已经在 msg 中定义\nlet delivery_time = msg.delivery_time;\nlet old_delivery_time = global.get(\"deliveryTimeLatest_old\");\nlet carshop_notice = global.get(\"carshopNotice\")\nlet old_carshop_notice = global.get(\"carshopNotice_old\");\n\n// 检查条件\nif ((delivery_time !== old_delivery_time) || (carshop_notice !== old_carshop_notice)) {\n    // 如果条件为真，可以执行一些操作\n    msg.changed = true; // 例如，设置一个标志\n} else {\n    msg.changed = false; // 如果没有变化\n}\nmsg.delivery_time = delivery_time\nmsg.old_delivery_time = old_delivery_time\nmsg.carshop_notice = carshop_notice\nmsg.old_carshop_notice = old_carshop_notice\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1070,
    "y": 1100,
    "wires": [["55e5e6e4509875ed", "d77b0860fc6d8544"]]
  },
  {
    "id": "d77b0860fc6d8544",
    "type": "debug",
    "z": "7f1ddb83788c4219",
    "name": "debug 406",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 1230,
    "y": 1140,
    "wires": []
  },
  {
    "id": "24c5454de65ae874",
    "type": "ha-entity-config",
    "server": "8473da4d3c8e0016",
    "deviceConfig": "",
    "name": "yu7_notify",
    "version": "6",
    "entityType": "sensor",
    "haConfig": [
      {
        "property": "name",
        "value": "yu7交付进度通知"
      },
      {
        "property": "icon",
        "value": ""
      },
      {
        "property": "entity_picture",
        "value": ""
      },
      {
        "property": "entity_category",
        "value": ""
      },
      {
        "property": "device_class",
        "value": ""
      },
      {
        "property": "unit_of_measurement",
        "value": ""
      },
      {
        "property": "state_class",
        "value": ""
      }
    ],
    "resend": true,
    "debugEnabled": false
  },
  {
    "id": "8473da4d3c8e0016",
    "type": "server",
    "name": "4a1801",
    "version": 5,
    "addon": false,
    "rejectUnauthorizedCerts": false,
    "ha_boolean": "y|yes|true|on|home|open",
    "connectionDelay": true,
    "cacheJson": true,
    "heartbeat": false,
    "heartbeatInterval": "30",
    "areaSelector": "friendlyName",
    "deviceSelector": "friendlyName",
    "entitySelector": "friendlyName",
    "statusSeparator": "at: ",
    "statusYear": "hidden",
    "statusMonth": "short",
    "statusDay": "numeric",
    "statusHourCycle": "h23",
    "statusTimeFormat": "h:m",
    "enableGlobalContextStore": true
  }
]
